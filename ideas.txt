--------------------------------------------------------------------------------
Planned features:
--------------------------------------------------------------------------------

4.2.0
  - Help:
	* Improved grouping of script-tools
	* Descriptors for group names
	* Derive from base-classes in WriteClass and enable 'include base-methods'
	  in doxygen.
	* Add pages:
ok	  - welcome
ok	  - license
ok	  - libraries
	  - controls
ok	  - shortcuts
ok	  - about
	* Other Help menu entries simply open the help browser with the associated page:
ok	  - User Manual
	  -------------------
ok	  - Script Reference
ok	  - Shortcuts
	  - Controls
ok	  - License
ok	  - About

  - Log:
ok	* Read log message from resource-file "greetings-log.txt"
ok	* Simplify log-message (e.g. Promesh (c) 2006-2015 Sebastian Reiter, non commercial...)

  - File-Menu:
ok	* Add 'Quit' button

  - Script-Menu:
	* Always refresh the whole tool-browser

  - Delete Button:
ok	* Add question and tell: 'No undo possible'



4.2.1
  - Camera:
	* Fix-View, Align-View, Ortho-View



4.2.X
  - Compilation
  	* Compile and execute docugen from within promesh's cmake file
  - Script-Menu:
    * Perform a more sensible update of the tool-browser. Problem: Buttons
      and dialogs are currently handled in different ways and can not be
      replaced by each other!?!
    * New script tools enforce a complete recreation of the tool browser.
      Idea: Store open/close states for each browser entry and the currently
      visible tool and restore those states after reload.



--------------------------------------------------------------------------------
IDEAS
--------------------------------------------------------------------------------

Ctrl-RClick always triggers special selection (even if box selection is active).
Support multiple special selections:
  - subset (including -1)
  - marked/unmarked
  - boundary/inner
  - linked flat / smooth path



QToolBrowser knows all tools and their dialogs.
On refresh-tools(ToolMgr*) it traverses the list of categories and tools from IToolMgr and inserts or removes
tools as required. For all tools that stay it calls bool ITool::widget_changed(QWidget* widget);
and if this returns true it deletes the old widget and creates a new one through ITool::create_widget();



ProMesh rework:
Buzzwords:
- C++ 11
- Multithreading
- New Qt version
- Qt Styles


Main-Editor-Area:
Tabbed View. Each Tab can represent a different Document-Set.


A Document can be a SceneView or a Text-Document etc...

"Join Meshes":	RemoveDoubles on the fly (optionally)

Scene:
- Holds several Meshes.
- Two modes: "Overview" and "Meshing", triggered by TAB.
	* "Overview":
		- Create, select, transform, join meshes.
		- All tools behave as if all elements of selected meshes were selected.
		- Tools: Camera, GridGeneration
	* "Meshing":
		- Allow selection of sub-elements
		- Elements of all selected meshes can be selected
		- Tools are applied to individual elements of all selected meshes




split-edge + swap of adjacent edges
if swap is not possible: perform bisection refinement (see below)
bisection refinement: refine connected hypotenuses until a corner is reached...

adjust edge length - higher smoothen ratio
coarsen 3-vrts
coarsen 4-vrts

swap if largest angle gets smaller and surface is kept (check distance of swapped and original line segment)

consider crease- and fixed vertices

